name: CI/CD - Deploy to AKS

on:
  push:
    branches:
      - main  # Trigger workflow on push to main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from GitHub
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Login to Azure using a service principal
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Docker login to Azure Container Registry
    - name: Docker login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
        username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

    # Step 4: Build and push Docker image
    - name: Build and push image to ACR
      run: |
        docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/pubnub-chat-demo:latest .
        docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/pubnub-chat-demo:latest

    # Step 5: Configure kubectl to access your AKS cluster
    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ secrets.CLUSTER_NAME }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}

    # Step 6: Deploy app to AKS
    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
